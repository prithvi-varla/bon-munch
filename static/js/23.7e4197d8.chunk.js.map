{"version":3,"sources":["components/LandingPage/index.js"],"names":["LandingPage","props","nextPage","setState","pageNumber","state","getProucts","onChange","loading","products","totalPages","totalProducts","modal","isOpen","timer","handleOpenModal","bind","handleCloseModal","addImage","this","fetchAllImages","setTimeout","clearInterval","history","push","fromPage","event","deleteImage","currentTarget","id","successMessage","displayLandingImages","displayAddImage","renderProducts2","images","imageInfo","location","undefined","title","color","renderProducts","map","item","className","key","src","srcUrl","name","onClick","zIndex","centered","toggle","deleteButton","index","altText","caption","header","length","items","htmlFor","icon","React","Component","connect","store","Image","dispatch","imageType"],"mappings":"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","file":"static/js/23.7e4197d8.chunk.js","sourcesContent":["import React, { Fragment,useState, Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport LoadingImage from '../../layout-components/LoadingImage'\nimport HeaderCrumb from '../../layout-components/HeaderCrumb';\nimport { fetchAllImages, deleteImage } from '../../actions/image_actions';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Row,\n  Card,\n  UncontrolledAlert,\n  UncontrolledCarousel\n} from 'reactstrap';\n\nconst mapStateToProps = (store) => ({\n  imageInfo: store.Image\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllImages: (imageType) => dispatch(fetchAllImages(imageType)),\n  deleteImage: (id, imageType) => dispatch(deleteImage(id, imageType))\n});\n\nclass LandingPage extends React.Component {\n  \n  constructor(props) {\n\n    super(props);\n    this.state = {\n      loading: false,\n      products: [],\n      pageNumber: 0,\n      totalPages: 0,\n      totalProducts: 0,\n      modal: false,\n\n      isOpen: false,\n      timer: null\n\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.addImage = this.addImage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllImages(\"LANDING_PAGE\");\n    const timer = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    }, 3000);\n    this.setState({ timer: timer });\n\n    this.state.isOpen = true;\n    // setState to true so that loading will show\n    //this.setState({ loading: true });\n  }\n\n  componentWillUnmount() {\n\t\tclearInterval(this.state.timer);\n\t}\n\n  nextPage = () => {\n    this.setState(\n      {\n        pageNumber: this.state.pageNumber + 1\n      },\n      () => {\n        this.getProucts();\n      }\n    );\n  };\n\n\n  onChange = () => {\n    this.setState(\n      {\n        pageNumber: this.state.pageNumber + 1\n      },\n      () => {\n        this.getProucts();\n      }\n    );\n  };\n\n  handleOpenModal () {\n    this.setState({ modal: !this.state.modal });\n  }\n\n  handleCloseModal () {\n    this.setState({ modal: false });\n  }\n\n  addImage () {\n    this.props.history.push('/AddImage', { fromPage: 'LandingPage'});\n  }\n\n  deleteButton(event) {\n    this.props.deleteImage(event.currentTarget.id, \"LANDING_PAGE\");\n    this.handleCloseModal();\n    const timer = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    }, 3000);\n    this.setState({ timer: timer });\n\n    this.state.isOpen = true;\n  }\n\n  render() {\n    const { images } = this.props.imageInfo;\n    const { state } = this.props.location;\n    \n\n    if (images == undefined) {\n      return (\n        <div>\n          <HeaderCrumb title=\"LandingPage\" />\n          <LoadingImage />\n        </div>\n      );\n    }\n\n    let successMessage, displayLandingImages, displayAddImage, renderProducts2;\n    if (state != undefined) {\n      successMessage = (<UncontrolledAlert color=\"success\" isOpen={this.state.isOpen}>\n                              Landing page image is successfully saved/deleted.\n                            </UncontrolledAlert>\n                          );\n    }\n\n    let renderProducts = images.map(item => {\n      return (\n        <div className=\"product-item\" key={item.id}>\n          <div>\n            {<img src={item.srcUrl} />}\n            <p>{item.name}</p>\n          </div>\n          <div className=\"image-actions\">\n            <Button\n              id= {item.id}\n              className=\"remove\"\n              onClick={this.handleOpenModal}\n            >\n              &times;\n            </Button>\n            <Modal zIndex={2000} centered isOpen={this.state.modal} toggle={this.handleOpenModal}>\n            <ModalHeader toggle={this.handleOpenModal}>Delete Warning</ModalHeader>\n            <ModalBody>\n              <p>\n                Are you sure you want to delete the image ?\n              </p>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={this.handleOpenModal}>\n                Close\n              </Button>{' '}\n              <Button id= {item.id} color=\"primary\" className=\"ml-auto\" onClick={this.deleteButton.bind(this)}>\n                DELETE\n              </Button>\n            </ModalFooter>\n            </Modal>\n          </div>\n        </div>\n      );\n    });\n\n    renderProducts2 = images.map((item, index) => {\n      return (\n        {\n          src: item.srcUrl,\n          altText: item.name,\n          caption: item.name,\n          header: item.name,\n          key: index\n        }\n      );\n    });\n\n\n\n    if (images.length > 0) {\n      displayLandingImages = (\n                                  <Row className=\"carousel-width\">\n                                  <Card className=\"mt-5 mt-xl-0\">\n                                    <div className=\"p-3\">\n                                      <UncontrolledCarousel items={renderProducts2} />\n                                    </div>\n                                  </Card>\n                                </Row>\n                              );\n    }\n\n    if (images.length < 6) {\n      displayAddImage = (\n                          <Card className=\"card-box mb-4 pt-4 pb-2\">\n                          <div className=\"app-wrapper-image\">\n                             <div className=\"products-container landing-add-item\">\n                              <div className=\"product-item\" key=\"123\">\n                                <p>Add Item</p>\n                                <label htmlFor='single'>\n                                <FontAwesomeIcon\n                                            icon={['fa', 'plus-circle']}\n                                            className=\"font-size-xxxl symbol-style\"\n                                            onClick={this.addImage}\n                                          />\n                                </label>\n                              </div>\n                            </div>\n                            <div className=\"products-container\">\n                              {images.length > 0 && renderProducts}\n                            </div>\n                          </div>\n                        </Card>\n                        );\n    }\n    return (\n      <Fragment>\n        <HeaderCrumb title=\"Gallery\" />\n        {successMessage}\n\n        {displayAddImage}\n\n        <div className=\"image-divider my-4\" />\n        \n        {displayLandingImages}\n\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n"],"sourceRoot":""}