{"version":3,"sources":["components/DashboardDefault/DashboardDefaultSection2/index.js","components/DashboardDefault/DashboardDefaultSection3/index.js","actions/dashboard_actions.js","utils/admin_util.jsx","components/DashboardDefault/index.js"],"names":["LivePreviewExample","props","state","name","price","description","undefined","this","rest","table","header","body","dataValues","map","val","k","key","className","length","onClick","e","preventDefault","title","color","status","date","dangerouslySetInnerHTML","__html","colSpan","hover","borderless","isDashboard","href","size","Component","chart53Options","chart","toolbar","show","sparkline","enabled","dataLabels","stroke","curve","width","fill","colors","legend","xaxis","crosshairs","yaxis","min","chart53Data","data","dailySummary","totalSummary","monthlyUsers","usersProgress","totalUsers","monthlyOrders","ordersProgress","totalOrders","totalRevenue","monthlyOrdersList","authRequest","Object","assign","push","Row","Col","xl","Card","CardHeader","CardBody","lg","md","Progress","value","ListGroup","flush","ListGroupItem","icon","options","series","type","height","fetchAdminInfo","dispatch","fetch","headers","localStorage","getItem","then","res","json","adminInfo","receiveAdminInfo","DashboardDefault","HeaderCrumb","DashboardDefaultSection2","ordersSummary","connect","store","Dashboard"],"mappings":"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","file":"static/js/22.bfbbfd15.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\n\nimport {\n  Table,\n  CardBody,\n  Card,\n  Badge,\n  Button\n} from 'reactstrap';\n\nimport LoadingImage from '../../../layout-components/LoadingImage'\n\nclass LivePreviewExample extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n        name: '',\n        price: 0,\n        description:''\n    };\n  }\n\n  render() {\n\n    if (this.props.rest == undefined) {\n      return (\n        <div>\n          <LoadingImage />\n        </div>\n      );\n    }\n\n    let table = { header: '', body: '' }\n\n    var headerNames = ['#', 'Name', 'Status', 'Progress', 'Price'];\n    var dataValues = this.props.rest != null ? this.props.rest : [];\n\n    table.header = headerNames.map((val, k) => {\n      return (\n        <th key={`thead-${k}`} className=\"text-center\">{val}</th>\n      )\n    });\n\n    if (dataValues.length > 0) {\n\n      table.body = dataValues.map((val, k) => {\n        return (\n          <tr key={`thead-${k}`}>\n          <td className=\"text-center\">{k+1}</td>\n          <td className=\"text-center\">\n            <div>\n              <a\n                onClick={e => e.preventDefault()}\n                className=\"font-weight-bold text-black\"\n                title=\"...\">\n                {val.name}\n              </a>\n            </div>\n          </td>\n          <td className=\"text-center\">\n            <Badge\n              color=\"neutral-success\"\n              className=\"text-success px-4\">\n              {val.status}\n            </Badge>\n          </td>\n          <td className=\"text-center\">{val.date}</td>\n          <td className=\"text-center\"><span dangerouslySetInnerHTML={{ __html: '&dollar;' }} />{val.price}</td>\n        </tr>\n        \n          )\n        })\n\n    } else {\n      table.body = <tr><td colSpan={table.header.length}>No Data</td></tr>\n    }\n    return (\n      <Fragment>\n        <Card className=\"card-box mb-5\">\n          <div className=\"card-header pr-2\">\n            <div className=\"card-header--title\">Customer Orders</div>\n          </div>\n          <CardBody>\n            <div className=\"table-responsive\">\n              <Table hover borderless className=\"text-nowrap mb-0\">\n                <thead>\n                  <tr>{table.header}</tr>\n                </thead>\n                <tbody>\n                    {table.body}\n                </tbody>\n              </Table>\n            </div>\n          </CardBody>\n          <div className=\"text-center card-footer justify-content-between\" >\n            <div className={this.props.isDashboard ? '' : 'hidden'}>\n            <a href=\"/Orders\" >\n              <Button size=\"sm\" color=\"primary\" >\n                View All Orders\n              </Button>\n              </a>\n            </div>\n          </div>\n        </Card>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default LivePreviewExample;","import React, { Fragment, Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Row,\n  Col,\n  CardBody,\n  Card,\n  CardHeader,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Progress\n} from 'reactstrap';\n\nimport Chart from 'react-apexcharts';\n\nexport default class LivePreviewExample extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart53Options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          sparkline: {\n            enabled: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          color: '#4191ff',\n          curve: 'smooth',\n          width: 2\n        },\n        fill: {\n          color: '#f4772e'\n        },\n        colors: ['#f4772e'],\n        legend: {\n          show: false\n        },\n        xaxis: {\n          crosshairs: {\n            width: 1\n          }\n        },\n        yaxis: {\n          min: 0\n        }\n      },\n      chart53Data: [\n        {\n          name: 'Orders',\n          data: [32, 52, 45, 32, 54, 56, 28, 25, 36, 62]\n        }\n      ]\n    };\n  }\n\n  render() {\n\n    var dataValues = this.props.rest != null ? this.props.rest : [];\n\n    var dailySummary = dataValues.dailySummary;\n    var totalSummary = dataValues.totalSummary;\n\n    var monthlyUsers = ''\n    var usersProgress = ''\n    var totalUsers = ''\n    var monthlyOrders = ''\n    var ordersProgress = ''\n    var totalOrders = ''\n\n    var totalUsers = ''\n    var totalOrders = ''\n    var totalRevenue = ''\n    var monthlyOrdersList =  []\n\n    if (dailySummary != undefined && totalSummary != undefined) {\n      \n      monthlyUsers = dailySummary.monthlyUsers\n      usersProgress = dailySummary.usersProgress\n      totalUsers = dailySummary.totalUsers\n      monthlyOrders = dailySummary.monthlyOrders\n      ordersProgress = dailySummary.ordersProgress\n      totalOrders = dailySummary.totalOrders\n\n      totalUsers = totalSummary.totalUsers\n      totalOrders = totalSummary.totalOrders\n      totalRevenue = totalSummary.totalRevenue\n\n      const authRequest = Object.assign({}, { name: 'Orders', data: totalSummary.monthlyOrdersList });\n      monthlyOrdersList.push(authRequest);\n    }\n\n    return (\n      <Fragment>\n        <Row>\n          <Col xl=\"7\">\n            <Card className=\"card-box mb-5\">\n            <div className=\"card-header d-block\">\n                  <span className=\"text-uppercase py-3 py-xl-4 text-black d-block text-center font-weight-bold font-size-lg\">\n                    Monthly Summary\n                  </span>\n                </div>\n              <CardHeader>\n                <div className=\"font-size-lg d-block text-truncate\">\n                  <span className=\"text-black-50 pr-2\"></span> Users\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col lg=\"6\" md=\"3\">\n                    <div className=\"text-center\">\n                      <span className=\"text-black-50 d-block\">Users</span>\n                      <b className=\"font-size-xxl\">{monthlyUsers}</b>\n                    </div>\n                  </Col>\n                  <Col lg=\"6\" md=\"3\">\n                    <div className=\"text-center\">\n                      <span className=\"text-black-50 d-block\">Total Users</span>\n                      <b className=\"font-size-xxl\">{totalUsers}</b>\n                    </div>\n                  </Col>\n                  <Col lg=\"12\" md=\"6\" className=\"align-box-row\">\n                    <div className=\"w-100 mt-3 mt-md-0\">\n                      <div className=\"py-2\">\n                        <div className=\"align-box-row\">\n                          <div className=\"flex-grow-1\">\n                            <Progress\n                              value={usersProgress}\n                              color=\"success\"\n                              className=\"progress-bar-rounded\">\n                              {' '}\n                              {usersProgress}%\n                            </Progress>\n                          </div>\n                          <div className=\"line-height-sm text-center ml-4\">\n                                <b className=\"font-size-lg text-success\">\n                                {usersProgress}%\n                                </b>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem className=\"p-0\">\n                  <div className=\"divider\" />\n                  <CardHeader>\n                    <div className=\"font-size-lg d-block text-truncate\">\n                      <span className=\"text-black-50 pr-2\"></span> Orders\n                    </div>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col lg=\"6\" md=\"3\">\n                        <div className=\"text-center\">\n                          <span className=\"text-black-50 d-block\">Orders</span>\n                          <b className=\"font-size-xxl\">{monthlyOrders}</b>\n                        </div>\n                      </Col>\n                      <Col lg=\"6\" md=\"3\">\n                        <div className=\"text-center\">\n                          <span className=\"text-black-50 d-block\">Total Orders</span>\n                          <b className=\"font-size-xxl\">{totalOrders}</b>\n                        </div>\n                      </Col>\n                      <Col lg=\"12\" md=\"6\" className=\"align-box-row\">\n                        <div className=\"w-100 mt-3 mt-md-0\">\n                          <div className=\"py-2\">\n                            <div className=\"align-box-row\">\n                              <div className=\"flex-grow-1\">\n                                <Progress\n                                  value={ordersProgress}\n                                  color=\"warning\"\n                                  className=\"progress-bar-rounded\">\n                                  {' '}\n                                  {ordersProgress}%\n                                </Progress>\n                              </div>\n                              <div className=\"line-height-sm text-center ml-4\">\n                                <b className=\"font-size-lg text-warning\">\n                                {ordersProgress}%\n                                </b>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n          <Col xl=\"5\">\n            <Card className=\"card-box mb-5\">\n              <div className=\"px-4 px-xl-5 pb-1\">\n                <div className=\"card-header d-block\">\n                  <span className=\"text-uppercase py-3 py-xl-4 text-black d-block text-center font-weight-bold font-size-lg\">\n                    Total Summary\n                  </span>\n                </div>\n                <CardBody className=\"p-0\">\n                  <div className=\"grid-menu grid-menu-2col\">\n                    <Row className=\"no-gutters\">\n                      <Col lg=\"4\" className=\"p-3\">\n                        <div className=\"text-center\">\n                          <FontAwesomeIcon\n                            icon={['fa', 'print']}\n                            className=\"font-size-xxl text-success my-3\"\n                          />\n                          <span className=\"text-black-50 d-block\">Orders</span>\n                          <b className=\"font-size-xxl\">{totalOrders}</b>\n                        </div>\n                      </Col>\n                      <Col lg=\"4\" className=\"p-3\">\n                        <div className=\"text-center\">\n                          <FontAwesomeIcon\n                            icon={['fas', 'user']}\n                            className=\"font-size-xxl text-warning my-3\"\n                          />\n                          <span className=\"text-black-50 d-block\">Users</span>\n                          <b className=\"font-size-xxl\">{totalUsers}</b>\n                        </div>\n                      </Col>\n                      <Col lg=\"4\" className=\"p-3\">\n                        <div className=\"text-center\">\n                          <FontAwesomeIcon\n                            icon={['fa', 'award']}\n                            className=\"font-size-xxl text-success my-3\"\n                          />\n                          <span className=\"text-black-50 d-block\">Revenue</span>\n                          <b className=\"font-size-xxl\"><small className=\"text-black-50 pr-1\">$</small>{totalRevenue}</b>\n                        </div>\n                      </Col>\n                    </Row>\n                  </div>\n                </CardBody>\n                \n                <div className=\"card-header border-0 d-block\">\n                  <span className=\"text-uppercase pb-1 pt-1 text-black d-block text-center font-weight-bold font-size-lg\">\n                    6 Months Revenue\n                  </span>\n                </div>\n                <Chart\n                  options={this.state.chart53Options}\n                  series={monthlyOrdersList}\n                  type=\"area\"\n                  height={170}\n                />\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n","import * as AdminInfo from '../utils/admin_util';\n\nexport const ADMIN_INFO = 'ADMIN_INFO';\n\nexport const receiveAdminInfo = adminInfo => {\n  return ({\n    type: ADMIN_INFO,\n    adminInfo\n  });\n};\n\nexport const fetchAdminInfo = () => dispatch => {\n  return (\n    AdminInfo.fetchAdminInfo()\n      .then((adminInfo) => dispatch(receiveAdminInfo(adminInfo)))\n  );\n};\n\n","export const fetchAdminInfo = () => {\n    return fetch('http://localhost:9091/bonmunch/v1/companies/adminsummary', {\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': 'Bearer '+localStorage.getItem(\"token\")\n        }\n    })\n        .then(res => res.json())\n};","import React, { Fragment, Component } from 'react';\n\nimport DashboardDefaultSection2 from './DashboardDefaultSection2';\nimport DashboardDefaultSection3 from './DashboardDefaultSection3';\nimport HeaderCrumb from '../../layout-components/HeaderCrumb';\n\nimport { connect } from 'react-redux'\nimport { fetchAdminInfo } from '../../actions/dashboard_actions';\n\nconst mapStateToProps = (store) => ({\n  adminInfo: store.Dashboard,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAdminInfo: () => dispatch(fetchAdminInfo())\n});\n\nclass DashboardDefault extends Component {\n\n  componentDidMount() {\n    this.props.fetchAdminInfo();\n  }\n\n  render() {\n    var data = this.props.adminInfo.data;\n    return (\n      <Fragment>\n        <HeaderCrumb title=\"Dasboard\" />\n        <DashboardDefaultSection3 rest={data} />\n        <DashboardDefaultSection2 rest={data != null ? data.ordersSummary : null} isDashboard={true}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardDefault);"],"sourceRoot":""}