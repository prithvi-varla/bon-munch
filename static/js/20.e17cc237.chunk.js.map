{"version":3,"sources":["utils/form_validation_util.jsx","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroupAddon.js","components/Products/ProductDetails/Components/index.js","components/Products/ProductDetails/index.js"],"names":["max","min","required","value","undefined","minValue18","email","test","aol","renderInputField","input","label","type","htmlFor","meta","touched","error","warning","className","placeholder","renderSelectField","optionValues","renderInputCurrencyField","renderCheckbox","id","propTypes","tag","tagPropType","size","PropTypes","string","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","InputGroupText","addonType","oneOf","isRequired","children","node","InputGroupAddon","ProductForm","state","categoryId","productCategoryMapName","handleSubmitForm","bind","event","s","targetCategoryId","target","categories","this","categoryInfo","data","categoryValue","map","el","categoryMapName","setState","initialValues","formData","dispatch","actionSubmit","history","push","handleSubmit","pristine","reset","submitting","Form","onSubmit","FormGroup","Field","name","component","validate","onChange","handleCategoryChange","Label","step","Button","color","disabled","onClick","cancelProduct","Component","reduxForm","form","ProductDetails","uploadStatus","productId","fetchProduct","fetchAllCategories","actionName","saveProduct","setTimeout","HeaderCrumb","title","LoadingImage","location","productInfo","action","Object","assign","password","tempList","forEach","sortList","filter","ele","ind","findIndex","elem","sort","a","b","keyIncrement","item","key","Card","CardBody","CardTitle","connect","store","Product","Categories","productSave","categoryType"],"mappings":"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","file":"static/js/20.e17cc237.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n    Label,\n    Input,\n    CustomInput\n  } from 'reactstrap';\n\n\nexport const required = value => value ? undefined : 'Required'\nexport const maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\nexport const maxLength15 = maxLength(15)\nexport const number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\nexport const minValue = min => value =>\n  value && value < min ? `Must be at least ${min}` : undefined\nexport const minValue18 = minValue(18)\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\n  'Invalid email address' : undefined\nexport const tooOld = value =>\n  value && value > 65 ? 'You might be too old for this' : undefined\nexport const aol = value =>\n  value && /.+@aol\\.com/.test(value) ?\n  'Really? You still use AOL for your email?' : undefined\n\nexport const renderInputField = ({ input, label, type, htmlFor, meta: { touched, error, warning } }) => (\n    <div className=\"form-valid\">\n        <Label htmlFor={htmlFor}>{label}</Label>\n        <Input\n        {...input} placeholder={label} type={type}\n        />\n        {touched && ((error && <span> {error}</span>) || (warning && <span> {warning}</span>))}\n        \n    </div>\n)\n\nexport const renderSelectField = ({ input, label, type, htmlFor, optionValues, meta: { touched, error, warning } }) => (\n  <div className=\"form-valid\">\n      <Label htmlFor={htmlFor}>{label}</Label>\n      <Input\n      {...input} placeholder={label} type={type}\n      >{optionValues}</Input>\n      {touched && ((error && <span> {error}</span>) || (warning && <span> {warning}</span>))}\n      \n  </div>\n)\n\nexport const renderInputCurrencyField = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div className=\"form-valid\">\n      <Input\n      {...input} placeholder={label} type={type}\n      />\n      {touched && ((error && <span> {error}</span>) || (warning && <span> {warning}</span>))}\n      \n  </div>\n)\n\nexport const renderCheckbox = ({ input, label, type, className, id, meta: { touched, error, warning } }) => (\n  <div className=\"form-valid\">\n      <CustomInput\n      {...input} className={className} type={type} label={label} id={id}\n      />\n  </div>\n)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\n\nimport {\n    Form,\n    Label,\n    FormGroup,\n    Input,\n    Button,\n    InputGroup,\n    InputGroupAddon\n  } from 'reactstrap';\n\nimport {renderInputField, renderCheckbox, renderSelectField, renderInputCurrencyField, required, email, aol, minValue18} from '../../../../utils/form_validation_util';\n\n\nclass ProductForm extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            categoryId: '',\n            productCategoryMapName:''\n        };\n\n        this.handleSubmitForm.bind(this);\n      }\n\n    handleCategoryChange(event, s) {\n        let targetCategoryId = event.target.value;\n        var categories = this.props.categoryInfo.data;\n        let categoryValue = '';\n        categories.map(function (el) { \n          if (el.categoryId == event.target.value) {\n            categoryValue = el.categoryMapName;\n          }\n        });\n        this.setState({\n          categoryId : targetCategoryId,\n          productCategoryMapName: categoryValue\n        });\n      }\n\n      componentDidUpdate() {\n        if (this.state.categoryId == '') {\n          if (this.props.initialValues != null){\n            this.setState({\n                categoryId : this.props.initialValues.categoryId,\n                productCategoryMapName : this.props.initialValues.productCategoryMapName\n          });\n        }\n      }\n    }\n\n    handleSubmitForm (formData, dispatch) {\n\n        formData.categoryId = this.state.categoryId;\n        formData.productCategoryMapName = this.state.productCategoryMapName;\n        this.props.actionSubmit(formData);\n\n    }\n    \n    cancelProduct(event) {\n        this.props.history.push('/Products');\n    }\n\nrender() {\n\n    let {\n        handleSubmit, pristine, reset, initialValues, submitting \n    } = this.props;\n      \n    if (initialValues != null) {\n        \n        return (\n            \n            <Form onSubmit={handleSubmit(this.handleSubmitForm.bind(this))}>\n\n                <FormGroup>\n                    <Field name=\"name\" type=\"name\" id=\"name\"\n                        htmlFor=\"productName\"\n                        component={renderInputField} label=\"Product Name\"\n                        validate={[ required ]}\n                    />\n                </FormGroup>\n                        \n                <FormGroup>\n                    <Field name=\"description\" type=\"name\" id=\"description\"\n                        htmlFor=\"description\"\n                        component={renderInputField} label=\"Description\"\n                        validate={[ required ]}\n                    />\n                </FormGroup>\n\n                <FormGroup>\n                    <Field name=\"categoryId\" type=\"select\" id=\"categorySelect\"\n                        htmlFor=\"categorySelect\" optionValues = {this.props.optionValues}\n                        onChange={event => this.handleCategoryChange(event, this)}\n                        component={renderSelectField} label=\"Select\"\n                        validate={[ required ]}\n                    />\n                </FormGroup>\n\n                <Label htmlFor=\"productPrice\">Price</Label>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n                    <Field name=\"price\" type=\"number\" id=\"price\"\n                        min={0} max={100} step=\"1\"\n                        component={renderInputCurrencyField} label=\"Price\"\n                        validate={[ required ]}\n                    />\n                </InputGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Field className=\"mb-3\" type=\"checkbox\" id=\"active\" name=\"active\"\n                        component={renderCheckbox} label=\"Active\"\n                    />\n                </FormGroup>\n\n                <FormGroup>\n                    <Field className=\"mb-3\" type=\"checkbox\" id=\"spicy\" name=\"spicy\"\n                        component={renderCheckbox} label=\"Spicy\"\n                    />\n                </FormGroup>\n\n                <FormGroup>\n                    <Field className=\"mb-3\" type=\"checkbox\" id=\"vegetarian\" name=\"vegetarian\"\n                        component={renderCheckbox} label=\"Vegetarian ?\"\n                    />\n                </FormGroup>\n\n                <FormGroup>\n                    <Field className=\"mb-3\" type=\"checkbox\" id=\"allowOnlineOrder\" name=\"allowOnlineOrder\"\n                        component={renderCheckbox} label=\"Allow Online Order\"\n                    />\n                </FormGroup>\n\n                <Button color=\"primary\" className=\"mt-1\"  type=\"submit\" disabled={submitting}>\n                    Save\n                </Button>\n                <Button size=\"sm\" color=\"link\" className=\"btn-link-primary\" onClick={this.cancelProduct.bind(this)}>\n                    Cancel\n                </Button>\n            </Form>\n\n        )\n    } else {\n        return null;\n    }\n\n    }\n}\n\nexport default reduxForm({\n  form: 'productForm' // a unique identifier for this form\n})(ProductForm)","import React, { Fragment, Component } from 'react';\n\nimport {\n  CardBody,\n  Card,\n  CardTitle,\n  UncontrolledAlert\n} from 'reactstrap';\n\nimport { connect } from 'react-redux'\n\nimport HeaderCrumb from '../../../layout-components/HeaderCrumb';\n\nimport { productSave } from '../../../actions/product_actions';\nimport { fetchProduct } from '../../../actions/product_actions';\nimport { fetchAllCategories } from '../../../actions/category_actions';\nimport LoadingImage from '../../../layout-components/LoadingImage';\n\nimport ProductForm from './Components/index';\n\nconst mapStateToProps = (store) => ({\n  initialValues: store.Product.data,\n  productInfo: store.Product,\n  categoryInfo: store.Categories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveProduct: (data, actionName) => dispatch(productSave(data, actionName)),\n  fetchProduct: (productId) => dispatch(fetchProduct(productId)),\n  fetchAllCategories: (categoryType) => dispatch(fetchAllCategories(categoryType))\n});\n\n\nclass ProductDetails extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      uploadStatus: false\n  };\n\n    this.handleSubmitForm = this.handleSubmitForm.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.productId != null) {\n      this.props.fetchProduct(this.state.productId);\n    }\n    this.props.fetchAllCategories(\"ALL_CATEGORIES\");\n  }\n\n\n  handleSubmitForm (formData, dispatch) {\n    var actionName = this.state.productId != null ? 'UPDATE' : 'CREATE';\n    this.props.saveProduct(formData, actionName);\n\n    this.setState({\n      uploadStatus: true\n    });\n    setTimeout(() => {\n      this.props.history.push('/Products', { state: 'success'});\n    }, 3000)\n\n  }\n\n  render() {\n\n    let optionValues = null;\n    let initialValues = null;\n\n    if (this.state.uploadStatus) {\n      return (\n        <div>\n          <HeaderCrumb title=\"Products\" />\n          <LoadingImage />\n        </div>\n      );\n    } else {\n      const { state } = this.props.location;\n\n      if (state != undefined) {\n        this.state.productId = state.productId;\n      }\n    }\n\nif (this.props.productInfo != null && this.props.productInfo.action != null && this.props.productInfo.action == 'FETCH') {\n  initialValues = this.props.initialValues;\n}  else {\n  if (this.state.productId != undefined) {\n    return null;\n  }\n  initialValues = Object.assign({}, { name: '', password: '' });\n}\n   //if (this.props.productInfo != null && this.props.productInfo.action != null && this.props.productInfo.action == 'FETCH') {\n\n    if (this.props.categoryInfo.data != null ) {\n\n        let tempList = [];\n        this.props.categoryInfo.data.forEach(({ categoryId, categoryMapName }) => tempList.push({ categoryId, categoryMapName }));\n\n        let filterList = tempList.filter( (ele, ind) => ind === tempList.findIndex( elem => elem.categoryMapName === ele.categoryMapName));\n\n        // sort list\n        let sortList = filterList\n          .sort((a, b) => {\n            if (a.categoryMapName < b.categoryMapName) return -1;\n            else if (a.categoryMapName > b.categoryMapName) return 1;\n            return 0;\n          });\n\n          let keyIncrement = 1;\n          optionValues = sortList.map(item => {\n            return <option key= {keyIncrement++} value={item.categoryId}>{item.categoryMapName}</option>;\n          });\n\n      }\n\n    return (\n      <Fragment>\n        <HeaderCrumb title=\"New Product\" />\n        <Card className=\"card-box mb-5\">\n              <CardBody>\n                \n                  <CardTitle className=\"font-weight-bold font-size-lg mb-4\">\n                    New Product\n                  </CardTitle>\n                  <ProductForm {...this.props} optionValues={optionValues} actionSubmit={this.handleSubmitForm} initialValues = {initialValues}/>\n\n                </CardBody >\n              </Card>\n      </Fragment>\n    )\n    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);"],"sourceRoot":""}